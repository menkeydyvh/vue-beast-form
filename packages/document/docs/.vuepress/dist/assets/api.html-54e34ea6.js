import{_ as p,M as o,p as l,q as i,R as n,N as e,V as t,t as s,a1 as r}from"./framework-23cc0af1.js";const c={},u=n("h1",{id:"全局api",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#全局api","aria-hidden":"true"},"#"),s(" 全局api")],-1),d=n("h2",{id:"明细",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#明细","aria-hidden":"true"},"#"),s(" 明细")],-1),v=n("thead",null,[n("tr",null,[n("th",null,"名称"),n("th",null,"参数"),n("th",null,"说明")])],-1),k=n("tr",null,[n("td",null,[n("a",{href:"#beastform"},"beastForm")]),n("td",null,"-"),n("td",null,"本组件")],-1),m=n("td",null,"{}",-1),b=n("td",null,"加载组件",-1),h=n("td",null,"（string，directive）",-1),_=n("td",null,"加载指令",-1),f=n("td",null,"string|string[]",-1),y=n("td",null,"提前设置好组件emits",-1),g=n("tr",null,[n("td",null,[n("a",{href:"#%E8%A7%84%E5%88%99%E7%9A%84%E5%AF%B9%E8%B1%A1%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2"},"ruleParse")]),n("td",null,"string"),n("td",null,"规则字符串转换成对象")],-1),E=n("tr",null,[n("td",null,[n("a",{href:"#%E8%A7%84%E5%88%99%E7%9A%84%E5%AF%B9%E8%B1%A1%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2"},"ruleStringify")]),n("td",null,"RuleType|RuleType[]"),n("td",null,"对象规则转化成字符串")],-1),x=n("tr",null,[n("td",null,[n("a",{href:"#setbasepropsoption"},"setBasePropsOption")]),n("td",null,"PropsOptionType"),n("td",null,"设置基础的PropsOption")],-1),A=n("td",null,"string",-1),B=n("td",null,'获取有配置name值的<beast-form name="xxx" /> 的api',-1),w=n("tr",null,[n("td",null,"useFramework"),n("td",null,"string"),n("td",null,"多框架下切换框架使用，本文档多处使用注意看示例")],-1),j=r(`<h2 id="beastform" tabindex="-1"><a class="header-anchor" href="#beastform" aria-hidden="true">#</a> beastForm</h2><p>本框架组件在.vue文件中加载使用</p><p>xxx.vue</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> vbf <span class="token keyword">from</span> <span class="token string">&#39;vue-beast-form&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">BeastForm</span><span class="token operator">:</span> vbf<span class="token punctuation">.</span><span class="token function">beastForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="setbasepropsoption" tabindex="-1"><a class="header-anchor" href="#setbasepropsoption" aria-hidden="true">#</a> setBasePropsOption</h2><p>给所有的props.option设置一个默认值</p><p>main.js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> vbf <span class="token keyword">from</span> <span class="token string">&#39;vue-beast-form&#39;</span>

vbf<span class="token punctuation">.</span><span class="token function">setBasePropsOption</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// 设置默认form的展示</span>
    <span class="token literal-property property">form</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">layout</span><span class="token operator">:</span> <span class="token string">&quot;vertical&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// 设置默认全局启用 多语言</span>
    <span class="token literal-property property">isI18n</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="规则的对象与字符串转换" tabindex="-1"><a class="header-anchor" href="#规则的对象与字符串转换" aria-hidden="true">#</a> 规则的对象与字符串转换</h2><p>提供方便json中的函数在转换字符串和对象时候的处理</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> vbf <span class="token keyword">from</span> <span class="token string">&#39;vue-beast-form&#39;</span>

<span class="token keyword">const</span> ruleTemp <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">field</span><span class="token operator">:</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">on</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token function-variable function">click</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>api</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                <span class="token comment">// ....</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>

<span class="token comment">// 转换成字符串</span>
<span class="token keyword">const</span> ruleStr <span class="token operator">=</span> vbf<span class="token punctuation">.</span><span class="token function">ruleStringify</span><span class="token punctuation">(</span>ruleTemp<span class="token punctuation">)</span>

<span class="token comment">// 转换回对象</span>
<span class="token keyword">const</span> ruleObj <span class="token operator">=</span> vbf<span class="token punctuation">.</span><span class="token function">ruleParse</span><span class="token punctuation">(</span>ruleStr<span class="token punctuation">)</span>

<span class="token operator">...</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function F(P,C){const a=o("RouterLink");return l(),i("div",null,[u,d,n("table",null,[v,n("tbody",null,[k,n("tr",null,[n("td",null,[e(a,{to:"/zh/guide/demandLoad.html"},{default:t(()=>[s("components")]),_:1})]),m,b]),n("tr",null,[n("td",null,[e(a,{to:"/zh/guide/demandLoad.html"},{default:t(()=>[s("directive")]),_:1})]),h,_]),n("tr",null,[n("td",null,[e(a,{to:"/zh/props/api.html#demo"},{default:t(()=>[s("emits")]),_:1})]),f,y]),g,E,x,n("tr",null,[n("td",null,[e(a,{to:"/zh/props/api.html#getapi"},{default:t(()=>[s("getApi")]),_:1})]),A,B]),w])]),j])}const O=p(c,[["render",F],["__file","api.html.vue"]]);export{O as default};
