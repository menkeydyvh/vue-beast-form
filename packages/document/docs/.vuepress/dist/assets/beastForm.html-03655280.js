import{_ as o,M as l,p as r,q as p,N as t,V as a,R as n,t as s,a1 as d}from"./framework-23cc0af1.js";const c={},u=n("h1",{id:"beastform",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#beastform","aria-hidden":"true"},"#"),s(" $beastForm")],-1),k=n("p",null,"$beastForm 用来告诉框架使用哪个框架的form和表单组件对应的一些配置项,同时也支持自定义配置form相关的配置项",-1),m=n("p",null,[n("strong",null,"ant-design-vue为例子")],-1),g=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" createApp "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'vue'"),s(`
`),n("span",{class:"token keyword"},"import"),s(" App "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'./App.vue'"),s(`

`),n("span",{class:"token keyword"},"const"),s(" app "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createApp"),n("span",{class:"token punctuation"},"("),s("App"),n("span",{class:"token punctuation"},")"),s(`
app`),n("span",{class:"token punctuation"},"."),s("config"),n("span",{class:"token punctuation"},"."),s("globalProperties"),n("span",{class:"token punctuation"},"."),s("$beastForm "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token literal-property property"},"base"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"''"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token literal-property property"},"frameworks"),n("span",{class:"token operator"},":"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token operator"},"..."),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),v=n("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" createApp "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'vue'"),s(`
`),n("span",{class:"token keyword"},"import"),s(" App "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'./App.vue'"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token keyword"},"type"),s(),n("span",{class:"token punctuation"},"{"),s(" GlobalConfigType "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"vue-beast-form"'),s(`

`),n("span",{class:"token keyword"},"const"),s(" app "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createApp"),n("span",{class:"token punctuation"},"("),s("App"),n("span",{class:"token punctuation"},")"),s(`
app`),n("span",{class:"token punctuation"},"."),s("config"),n("span",{class:"token punctuation"},"."),s("globalProperties"),n("span",{class:"token punctuation"},"."),s("$beastForm "),n("span",{class:"token operator"},"="),s("  "),n("span",{class:"token punctuation"},"{"),s(`
    base`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'ant-design-vue'"),n("span",{class:"token punctuation"},","),s(`
    frameworks`),n("span",{class:"token operator"},":"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"as"),s(` GlobalConfigType
`),n("span",{class:"token operator"},"..."),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),h=d(`<h2 id="配置项" tabindex="-1"><a class="header-anchor" href="#配置项" aria-hidden="true">#</a> 配置项</h2><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>base</td><td>string</td><td>使用默认框架名称</td></tr><tr><td><a href="#frameworks">frameworks</a></td><td>GlobalConfigTypeFramework</td><td>框架对应的配置,类型见下方介绍</td></tr></tbody></table><h2 id="frameworks" tabindex="-1"><a class="header-anchor" href="#frameworks" aria-hidden="true">#</a> frameworks</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> GlobalConfigTypeFramework <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-beast-form&#39;</span>

<span class="token keyword">const</span> frameworks<span class="token operator">:</span>GlobalConfigTypeFramework <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&quot;ant-design-vue&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
    baseConfig<span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    model<span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
    defaultValue<span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
    modelEvent<span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
    disabled<span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>快速查看字段说名： <a href="#baseConfig">baseConfig</a>、<a href="#model">model</a>、<a href="#defaultValue">defaultValue</a>、<a href="#modelEvent">modelEvent</a>、<a href="#disabled">disabled</a></p><h4 id="baseconfig" tabindex="-1"><a class="header-anchor" href="#baseconfig" aria-hidden="true">#</a> baseConfig</h4><ul><li>类型: {}</li><li>注意：下方key都是必填，如无值可设置为string默认值&quot;&quot;</li><li>说明：跟form与formItem相关的基础配置</li></ul><p><strong>下列用ant-design-vue的配置为值举栗子</strong></p><table><thead><tr><th style="text-align:left;">key</th><th style="text-align:left;">说明</th><th style="text-align:left;">类型</th><th style="text-align:left;">值</th></tr></thead><tbody><tr><td style="text-align:left;">form</td><td style="text-align:left;">框架form组件的名称</td><td style="text-align:left;">string</td><td style="text-align:left;">a-form</td></tr><tr><td style="text-align:left;">formPropsModel</td><td style="text-align:left;">框架form组件的数据对象属性</td><td style="text-align:left;">string</td><td style="text-align:left;">model</td></tr><tr><td style="text-align:left;">formItem</td><td style="text-align:left;">框架form组件的formItem名称</td><td style="text-align:left;">string</td><td style="text-align:left;">a-form-item</td></tr><tr><td style="text-align:left;">formItemPropName</td><td style="text-align:left;">formItem对应model上的key</td><td style="text-align:left;">string</td><td style="text-align:left;">name</td></tr><tr><td style="text-align:left;">formItemPropLabel</td><td style="text-align:left;">formItem对应标题label的key</td><td style="text-align:left;">string</td><td style="text-align:left;">label</td></tr><tr><td style="text-align:left;">formItemPropRules</td><td style="text-align:left;">formItem对应验证规则的key</td><td style="text-align:left;">string</td><td style="text-align:left;">rules</td></tr><tr><td style="text-align:left;">formItemSlotTitle</td><td style="text-align:left;">formItem对应标题label的插槽key</td><td style="text-align:left;">string</td><td style="text-align:left;">label</td></tr><tr><td style="text-align:left;">formEventValidate</td><td style="text-align:left;">form组件的验证事件</td><td style="text-align:left;">string</td><td style="text-align:left;">validate</td></tr><tr><td style="text-align:left;">formEventClearValidate</td><td style="text-align:left;">form组件的清除验证事件</td><td style="text-align:left;">string</td><td style="text-align:left;">clearValidate</td></tr></tbody></table><h4 id="model" tabindex="-1"><a class="header-anchor" href="#model" aria-hidden="true">#</a> model</h4><ul><li>类型: { [ComponentName: string]: string[] }</li><li>默认值： [&#39;modelValue&#39;]</li><li>说明：组件对应的v-model:key中的key</li></ul><p><strong>与默认值不一致时候需要配置</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token literal-property property">AInput</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ATransfer</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;selectedKeys&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;targetKeys&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defaultvalue" tabindex="-1"><a class="header-anchor" href="#defaultvalue" aria-hidden="true">#</a> defaultValue</h4><ul><li>类型: { [ComponentName: string]: any[] }</li><li>默认值： [null]</li><li>说明：组件对应的v-model:key中空值时候的默认值</li></ul><p><strong>与默认值不一致时候需要配置</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token literal-property property">ATransfer</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="modelevent" tabindex="-1"><a class="header-anchor" href="#modelevent" aria-hidden="true">#</a> modelEvent</h4><ul><li>类型: { [ComponentName: string]: string[] }</li><li>默认值：[&#39;onUpdate:modelValue&#39;]</li><li>说明：组件对应的v-model:key中的事件</li></ul><p><strong>与默认值不一致时候需要配置</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token literal-property property">ATransfer</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;onUpdate:selectedKeys&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;onUpdate:targetKeys&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="disabled" tabindex="-1"><a class="header-anchor" href="#disabled" aria-hidden="true">#</a> disabled</h4><ul><li>类型: { [ComponentName: string]: string }</li><li>默认值： &#39;disabled&#39;</li><li>说明：组件对应的禁用key 有些组件是用disabled 有些组件是用readonly 或者其他</li></ul><p><strong>与默认值不一致时候需要配置</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token literal-property property">组件名称</span><span class="token operator">:</span> <span class="token string">&quot;readonly&quot;</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><hr>`,27);function b(f,y){const e=l("CodeGroupItem"),i=l("CodeGroup");return r(),p("div",null,[u,k,m,t(i,null,{default:a(()=>[t(e,{title:"JS",active:""},{default:a(()=>[g]),_:1}),t(e,{title:"TS"},{default:a(()=>[v]),_:1})]),_:1}),h])}const _=o(c,[["render",b],["__file","beastForm.html.vue"]]);export{_ as default};
