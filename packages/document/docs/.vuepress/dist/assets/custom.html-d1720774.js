import{_ as e,M as t,p,q as o,R as n,t as s,N as c,a1 as l}from"./framework-23cc0af1.js";const i={},r=n("h1",{id:"组件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#组件","aria-hidden":"true"},"#"),s(" 组件")],-1),u={href:"https://v3.cn.vuejs.org/api/application-api.html#component",target:"_blank",rel:"noopener noreferrer"},d=n("a",{href:"#%E5%B8%83%E5%B1%80%E7%BB%84%E4%BB%B6"},"布局组件",-1),k=n("a",{href:"#%E8%A1%A8%E5%8D%95%E7%BB%84%E4%BB%B6"},"表单组件",-1),m=l(`<h2 id="布局组件" tabindex="-1"><a class="header-anchor" href="#布局组件" aria-hidden="true">#</a> 布局组件</h2><p>提供布局和一些布局相关的切换效果的组件</p><p>例如：栅格组件、提示框组件等</p><h2 id="表单组件" tabindex="-1"><a class="header-anchor" href="#表单组件" aria-hidden="true">#</a> 表单组件</h2><p>方便给表单提供数据处理的组件</p><p>例如：输入框组件、单选组件、复选框组件等</p><p>问：如何成为一个表单组件？</p><p><strong>答：提供v-model:key</strong></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    xxxx
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">props</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;modelValue&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;disabled&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">emits</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;update:modelValue&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// 其他自己开发...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9);function v(h,g){const a=t("ExternalLinkIcon");return p(),o("div",null,[r,n("p",null,[s("所有用vue方式开发并支持"),n("a",u,[s("vue compoment"),c(a)]),s(" 的方式均为组件。但可以区分为"),d,s("和"),k]),m])}const b=e(i,[["render",v],["__file","custom.html.vue"]]);export{b as default};
